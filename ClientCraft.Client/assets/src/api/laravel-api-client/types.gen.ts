// This file is auto-generated by @hey-api/openapi-ts

export type AccountModel = {
    /**
     * Unique account ID
     */
    id?: number;
    /**
     * Account name
     */
    name?: string;
    /**
     * Account status
     */
    status?: 'customer' | 'churn';
    /**
     * Industry of the account
     */
    industry?: (string) | null;
    /**
     * Website of the account
     */
    website?: (string) | null;
    /**
     * Address of the account
     */
    address?: (string) | null;
    /**
     * Phone number of the account
     */
    phone?: (string) | null;
    /**
     * Email address of the account
     */
    email?: (string) | null;
    /**
     * Date account was created
     */
    created_at?: string;
    /**
     * Date account was last updated
     */
    updated_at?: string;
};

/**
 * Account status
 */
export type status = 'customer' | 'churn';

export type AuthFormRequest = {
    email?: string;
    password?: string;
};

export type ContactModel = {
    /**
     * Unique contact ID
     */
    readonly id?: number;
    /**
     * Contact Name
     */
    name?: string;
    /**
     * Job that this contact has in the company
     */
    role?: (string) | null;
    /**
     * Companies that this contact is Attached to
     */
    readonly companies?: (string) | null;
    /**
     * Url for the contact's facebook
     */
    facebook_url?: (string) | null;
    /**
     * Url for the contact's linkedin
     */
    linkedin_url?: (string) | null;
    /**
     * Url for the contact's instagram
     */
    instagram_url?: (string) | null;
    /**
     * Date in which this contact was last contacted
     */
    last_contacted?: (string) | null;
    /**
     * Email address of the contact
     */
    email?: (string) | null;
    /**
     * Phone number of the contact
     */
    phone?: (string) | null;
    /**
     * Date contact was created
     */
    created_at?: string;
    /**
     * Date contact was last updated
     */
    updated_at?: string;
};

/**
 * Request body for converting a lead
 */
export type ConvertLeadRequest = {
    /**
     * The ID of the lead to convert
     */
    lead: number;
    /**
     * The name of the account to create
     */
    accountToCreate?: (string) | null;
    /**
     * The ID of the existing account to attach
     */
    accountToAttach?: (number) | null;
    /**
     * The name of the deal to create
     */
    dealToCreate?: (string) | null;
    /**
     * The ID of the existing deal to attach
     */
    dealToAttach?: (number) | null;
};

export type DealModel = {
    /**
     * Unique contact ID
     */
    readonly id?: number;
    /**
     * Deal Name
     */
    name?: string;
    /**
     * ID of the deal status
     */
    deal_status_id?: number;
    /**
     * Deal amount
     */
    amount?: (number) | null;
    /**
     * Expected close date
     */
    close_date?: (string) | null;
    /**
     * Deal Owner
     */
    user_id?: (number) | null;
    /**
     * Deal Type
     */
    deal_type_id?: (number) | null;
    /**
     * Deal priority
     */
    priority?: 'low' | 'medium' | 'high';
    /**
     * Date deal was created
     */
    readonly created_at?: string;
    /**
     * Date deal was last updated
     */
    readonly updated_at?: string;
};

/**
 * Deal priority
 */
export type priority = 'low' | 'medium' | 'high';

export type DealStatusModel = {
    /**
     * Unique deal status ID
     */
    id?: number;
    /**
     * deal status label
     */
    label?: string;
    /**
     * unique key to identify
     */
    key?: string;
    /**
     * deal status order
     */
    order?: number;
    /**
     * deal status color
     */
    color?: 'default' | 'positive' | 'warning' | 'danger';
    /**
     * Date deal status was created
     */
    created_at?: string;
    /**
     * Date deal status was last updated
     */
    updated_at?: string;
};

/**
 * deal status color
 */
export type color = 'default' | 'positive' | 'warning' | 'danger';

export type LeadModel = {
    /**
     * Unique contact ID
     */
    id?: number;
    /**
     * Lead name
     */
    name?: string;
    /**
     * Lead Company name (Only for business leads)
     */
    company?: string;
    /**
     * Role that this lead works
     */
    role?: string;
    /**
     * Phone number of the lead
     */
    phone?: (string) | null;
    /**
     * Email address of the lead
     */
    email?: (string) | null;
    /**
     * ID of the lead status
     */
    lead_status_id?: number;
    status?: LeadStatusModel;
    /**
     * List of users who own the lead
     */
    owners?: Array<UserModel>;
    /**
     * Link for Lead's facebook
     */
    facebook_url?: string;
    /**
     * Link for Lead's instagram
     */
    instagram_url?: string;
    /**
     * Link for Lead's linkedin
     */
    linkedin_url?: string;
    /**
     * Date lead was last contacted
     */
    last_contacted?: string;
    /**
     * Date lead was created
     */
    created_at?: string;
    /**
     * Date lead was last updated
     */
    updated_at?: string;
};

export type LeadStatusModel = {
    /**
     * Unique contact ID
     */
    id?: number;
    /**
     * Status label
     */
    label?: string;
    /**
     * unique key to identify
     */
    key?: string;
    /**
     * Status order
     */
    order?: number;
    /**
     * status
     */
    color?: 'default' | 'positive' | 'warning' | 'danger';
    /**
     * Date status was created
     */
    created_at?: string;
    /**
     * Date status was last updated
     */
    updated_at?: string;
};

/**
 * A note model representing comments or annotations tied to a notable entity.
 */
export type NoteModel = {
    /**
     * The unique identifier of the note.
     */
    readonly id?: number;
    /**
     * The content of the note.
     */
    content: string;
    /**
     * The ID of the notable entity (morph relationship).
     */
    readonly notable_id: number;
    /**
     * The timestamp when the note was created.
     */
    readonly created_at?: string;
    /**
     * The timestamp when the note was last updated.
     */
    readonly updated_at?: string;
};

export type PhotoModel = {
    /**
     * The unique identifier for the photo
     */
    id?: number;
    /**
     * The file path of the photo
     */
    file_path: string;
    /**
     * The file name of the photo
     */
    file_name: string;
    /**
     * The mime type of the photo
     */
    mime_type: string;
    /**
     * The size of the file in bytes
     */
    file_size: number;
    /**
     * The title of the photo
     */
    title?: string;
    /**
     * The description of the photo
     */
    description?: string;
    /**
     * The alt text for the photo
     */
    alt_text?: string;
    /**
     * The ID of the user or contact who uploaded the photo
     */
    uploaded_by_id?: number;
    /**
     * The type of the entity who uploaded the photo (e.g., User, Contact)
     */
    uploaded_by_type?: string;
    /**
     * The date and time when the photo was uploaded
     */
    uploaded_at: string;
    /**
     * Visibility status of the photo
     */
    visibility: 'private' | 'public';
    /**
     * The width of the photo in pixels
     */
    width?: number;
    /**
     * The height of the photo in pixels
     */
    height?: number;
    /**
     * The path to the thumbnail image of the photo
     */
    thumbnail_path?: string;
    /**
     * Indicates whether this is the primary photo
     */
    is_primary?: boolean;
    /**
     * The current status of the photo
     */
    status?: string;
    /**
     * The ID of the model associated with the photo (e.g., Lead, Account)
     */
    photoable_id?: number;
    /**
     * The type of the model associated with the photo (e.g., Lead, Account)
     */
    photoable_type?: string;
};

/**
 * Visibility status of the photo
 */
export type visibility = 'private' | 'public';

export type RoleModel = {
    /**
     * Unique ID of the role
     */
    id?: number;
    /**
     * Name of the role
     */
    name?: string;
    /**
     * List of users associated with this role
     */
    users?: Array<UserModel>;
    /**
     * Date the role was created
     */
    created_at?: string;
    /**
     * Date the role was last updated
     */
    updated_at?: string;
};

/**
 * Validation schema for creating a new account
 */
export type StoreAccountRequest = AccountModel & {
    /**
     * Account name
     */
    name: string;
};

/**
 * Validation schema for creating a new contact
 */
export type StoreContactRequest = ContactModel;

/**
 * Validation schema for creating a new deal
 */
export type StoreDealRequest = DealModel & {
    /**
     * Deal Name
     */
    name: string;
};

/**
 * Validation schema for creating a new lead
 */
export type StoreLeadRequest = LeadModel & {
    /**
     * Lead name
     */
    name: string;
};

/**
 * Validation schema for updating an existing account
 */
export type UpdateAccountRequest = AccountModel & {
    /**
     * HTTP method to spoof (e.g., PUT)
     */
    _method?: string;
};

/**
 * Validation schema for updating an existing contact
 */
export type UpdateContactRequest = ContactModel & {
    /**
     * HTTP method to spoof (e.g., PUT)
     */
    _method?: string;
};

/**
 * Validation schema for creating a new deal
 */
export type UpdateDealRequest = DealModel & {
    /**
     * Deal Name
     */
    name: string;
};

/**
 * Validation schema for updating an existing lead
 */
export type UpdateLeadRequest = LeadModel & {
    /**
     * HTTP method to spoof (e.g., PUT)
     */
    _method?: string;
};

/**
 * Validation schema for updating an existing user
 */
export type UpdateUserRequest = UserModel & {
    /**
     * HTTP method to spoof (e.g., PUT)
     */
    _method?: string;
};

export type UserModel = {
    /**
     * Unique ID of the user
     */
    readonly id?: number;
    /**
     * First name of the user
     */
    name?: string;
    /**
     * Email address of the user
     */
    email?: string;
    /**
     * ID that matches with the user id on the source that the user came from
     */
    reference?: string;
    /**
     * Where did this User came from
     */
    source?: 'umbraco' | 'web';
    /**
     * Date the user was created
     */
    readonly created_at?: string;
    /**
     * Date the user was last updated
     */
    readonly updated_at?: string;
};

/**
 * Where did this User came from
 */
export type source = 'umbraco' | 'web';

export type GetAccountDealsData = {
    path: {
        /**
         * The ID of the account
         */
        account: number;
    };
};

export type GetAccountDealsResponse = (Array<DealModel>);

export type GetAccountDealsError = unknown;

export type CreateAccountDealData = {
    /**
     * Deal data
     */
    body: DealModel;
    path: {
        /**
         * The ID of the account
         */
        account: number;
    };
};

export type CreateAccountDealResponse = (DealModel);

export type CreateAccountDealError = unknown;

export type GetAccountDealData = {
    path: {
        /**
         * The ID of the account
         */
        account: number;
        /**
         * The ID of the deal
         */
        deal: number;
    };
};

export type GetAccountDealResponse = (DealModel);

export type GetAccountDealError = unknown;

export type UpdateAccountDealData = {
    /**
     * Updated deal data
     */
    body: {
        content: string;
    };
    path: {
        /**
         * The ID of the account
         */
        account: number;
        /**
         * The ID of the deal
         */
        deal: number;
    };
};

export type UpdateAccountDealResponse = (DealModel);

export type UpdateAccountDealError = unknown;

export type DeleteAccountDealData = {
    path: {
        /**
         * The ID of the account
         */
        account: number;
        /**
         * The ID of the deal
         */
        deal: number;
    };
};

export type DeleteAccountDealResponse = (void);

export type DeleteAccountDealError = unknown;

export type GetAccountNotesData = {
    path: {
        /**
         * The ID of the account
         */
        account: number;
    };
};

export type GetAccountNotesResponse = (Array<NoteModel>);

export type GetAccountNotesError = unknown;

export type CreateAccountNoteData = {
    /**
     * Note data
     */
    body: NoteModel;
    path: {
        /**
         * The ID of the account
         */
        account: number;
    };
};

export type CreateAccountNoteResponse = (NoteModel);

export type CreateAccountNoteError = unknown;

export type GetAccountNoteData = {
    path: {
        /**
         * The ID of the account
         */
        account: number;
        /**
         * The ID of the note
         */
        note: number;
    };
};

export type GetAccountNoteResponse = (NoteModel);

export type GetAccountNoteError = unknown;

export type UpdateAccountNoteData = {
    /**
     * Updated note data
     */
    body: {
        content: string;
    };
    path: {
        /**
         * The ID of the account
         */
        account: number;
        /**
         * The ID of the note
         */
        note: number;
    };
};

export type UpdateAccountNoteResponse = (NoteModel);

export type UpdateAccountNoteError = unknown;

export type DeleteAccountNoteData = {
    path: {
        /**
         * The ID of the account
         */
        account: number;
        /**
         * The ID of the note
         */
        note: number;
    };
};

export type DeleteAccountNoteResponse = (void);

export type DeleteAccountNoteError = unknown;

export type GetAccountsV2Data = {
    query?: {
        /**
         * Comma-separated list of relationships to include in the response
         */
        include?: string;
    };
};

export type CreateAccountV2Data = {
    /**
     * Payload to create a new account
     */
    body: AccountModel;
};

export type CreateAccountV2Response = (AccountModel);

export type CreateAccountV2Error = ({
    message?: string;
    errors?: {
        [key: string]: unknown;
    };
} | {
    message?: string;
});

export type GetAccountV2Data = {
    path: {
        /**
         * The ID of the account to retrieve
         */
        id: string;
    };
};

export type GetAccountV2Response = (AccountModel);

export type GetAccountV2Error = (unknown);

export type UpdateAccountV2Data = {
    body: UpdateAccountRequest;
    path: {
        /**
         * The ID of the account to update
         */
        id: string;
    };
};

export type UpdateAccountV2Response = (AccountModel);

export type UpdateAccountV2Error = (unknown);

export type DeleteAccountV2Data = {
    path: {
        /**
         * The ID of the account to delete
         */
        id: string;
    };
};

export type DeleteAccountV2Response = ({
    message?: string;
});

export type DeleteAccountV2Error = ({
    message?: string;
} | unknown);

export type GetAccountNamesResponse = ({
    id?: number;
    name?: string;
});

export type GetAccountNamesError = (unknown);

export type GetContactNotesData = {
    path: {
        /**
         * The ID of the contact
         */
        contact: number;
    };
};

export type GetContactNotesResponse = (Array<NoteModel>);

export type GetContactNotesError = unknown;

export type CreateContactNoteData = {
    /**
     * Note data
     */
    body: NoteModel;
    path: {
        /**
         * The ID of the contact
         */
        contact: number;
    };
};

export type CreateContactNoteResponse = (NoteModel);

export type CreateContactNoteError = unknown;

export type GetContactNoteData = {
    path: {
        /**
         * The ID of the contact
         */
        contact: number;
        /**
         * The ID of the note
         */
        note: number;
    };
};

export type GetContactNoteResponse = (NoteModel);

export type GetContactNoteError = unknown;

export type UpdateContactNoteData = {
    /**
     * Updated note data
     */
    body: {
        content: string;
    };
    path: {
        /**
         * The ID of the contact
         */
        contact: number;
        /**
         * The ID of the note
         */
        note: number;
    };
};

export type UpdateContactNoteResponse = (NoteModel);

export type UpdateContactNoteError = unknown;

export type DeleteContactNoteData = {
    path: {
        /**
         * The ID of the contact
         */
        contact: number;
        /**
         * The ID of the note
         */
        note: number;
    };
};

export type DeleteContactNoteResponse = (void);

export type DeleteContactNoteError = unknown;

export type GetContactsV2Data = {
    query?: {
        /**
         * Comma-separated list of relationships to include in the response
         */
        include?: string;
    };
};

export type CreateContactV2Data = {
    /**
     * Payload to create a new contact
     */
    body: ContactModel;
};

export type CreateContactV2Response = (ContactModel);

export type CreateContactV2Error = ({
    message?: string;
    errors?: {
        [key: string]: unknown;
    };
} | {
    message?: string;
});

export type GetContactV2Data = {
    path: {
        /**
         * The ID of the contact to retrieve
         */
        id: string;
    };
};

export type GetContactV2Response = (ContactModel);

export type GetContactV2Error = (unknown);

export type UpdateContactV2Data = {
    body: UpdateContactRequest;
    path: {
        /**
         * The ID of the contact to update
         */
        id: string;
    };
};

export type UpdateContactV2Response = (ContactModel);

export type UpdateContactV2Error = (unknown);

export type DeleteContactV2Data = {
    path: {
        /**
         * The ID of the contact to delete
         */
        id: string;
    };
};

export type DeleteContactV2Response = ({
    message?: string;
});

export type DeleteContactV2Error = ({
    message?: string;
} | unknown);

export type GetContactNamesResponse = ({
    id?: number;
    name?: string;
});

export type GetContactNamesError = (unknown);

export type GetDealStatusesResponse = (Array<DealStatusModel>);

export type GetDealStatusesError = unknown;

export type CreateDealStatusData = {
    /**
     * Status data
     */
    body: DealStatusModel;
};

export type CreateDealStatusResponse = (DealStatusModel);

export type CreateDealStatusError = unknown;

export type UpdateDealStatusData = {
    /**
     * Updated status data
     */
    body: {
        color?: 'default' | 'danger' | 'positive' | 'warning';
        label?: string;
    };
    path: {
        /**
         * The ID of the status
         */
        status: number;
    };
};

export type UpdateDealStatusResponse = (DealStatusModel);

export type UpdateDealStatusError = unknown;

export type DeleteDealStatusData = {
    path: {
        /**
         * The ID of the status
         */
        status: number;
    };
};

export type DeleteDealStatusResponse = (void);

export type DeleteDealStatusError = unknown;

export type CreateDealV2Data = {
    /**
     * Payload to create a new deal
     */
    body: DealModel;
};

export type CreateDealV2Response = (DealModel);

export type CreateDealV2Error = ({
    message?: string;
    errors?: {
        [key: string]: unknown;
    };
} | {
    message?: string;
});

export type GetDealV2Data = {
    path: {
        /**
         * The ID of the deal to retrieve
         */
        id: string;
    };
};

export type GetDealV2Response = (DealModel);

export type GetDealV2Error = (unknown);

export type UpdateDealV2Data = {
    body: UpdateDealRequest;
    path: {
        /**
         * The ID of the deal to update
         */
        id: string;
    };
};

export type UpdateDealV2Response = (DealModel);

export type UpdateDealV2Error = (unknown);

export type DeleteDealV2Data = {
    path: {
        /**
         * The ID of the deal to delete
         */
        id: string;
    };
};

export type DeleteDealV2Response = ({
    message?: string;
});

export type DeleteDealV2Error = ({
    message?: string;
} | unknown);

export type GetDealNamesResponse = ({
    id?: number;
    name?: string;
});

export type GetDealNamesError = (unknown);

export type GetLeadNotesData = {
    path: {
        /**
         * The ID of the lead
         */
        lead: number;
    };
};

export type GetLeadNotesResponse = (Array<NoteModel>);

export type GetLeadNotesError = unknown;

export type CreateLeadNoteData = {
    /**
     * Note data
     */
    body: NoteModel;
    path: {
        /**
         * The ID of the lead
         */
        lead: number;
    };
};

export type CreateLeadNoteResponse = (NoteModel);

export type CreateLeadNoteError = unknown;

export type GetLeadNoteData = {
    path: {
        /**
         * The ID of the lead
         */
        lead: number;
        /**
         * The ID of the note
         */
        note: number;
    };
};

export type GetLeadNoteResponse = (NoteModel);

export type GetLeadNoteError = unknown;

export type UpdateLeadNoteData = {
    /**
     * Updated note data
     */
    body: {
        content: string;
    };
    path: {
        /**
         * The ID of the lead
         */
        lead: number;
        /**
         * The ID of the note
         */
        note: number;
    };
};

export type UpdateLeadNoteResponse = (NoteModel);

export type UpdateLeadNoteError = unknown;

export type DeleteLeadNoteData = {
    path: {
        /**
         * The ID of the lead
         */
        lead: number;
        /**
         * The ID of the note
         */
        note: number;
    };
};

export type DeleteLeadNoteResponse = (void);

export type DeleteLeadNoteError = unknown;

export type CreateLeadPhotoData = {
    /**
     * Photo data
     */
    body: PhotoModel;
    path: {
        /**
         * The ID of the lead
         */
        lead: number;
    };
};

export type CreateLeadPhotoResponse = (PhotoModel);

export type CreateLeadPhotoError = unknown;

export type GetLeadPhotoData = {
    path: {
        /**
         * The ID of the lead
         */
        lead: number;
        /**
         * The ID of the photo
         */
        photo: number;
    };
};

export type GetLeadPhotoResponse = (PhotoModel);

export type GetLeadPhotoError = unknown;

export type UpdateLeadPhotoData = {
    /**
     * Updated photo data
     */
    body: {
        content: string;
    };
    path: {
        /**
         * The ID of the lead
         */
        lead: number;
        /**
         * The ID of the photo
         */
        photo: number;
    };
};

export type UpdateLeadPhotoResponse = (PhotoModel);

export type UpdateLeadPhotoError = unknown;

export type DeleteLeadPhotoData = {
    path: {
        /**
         * The ID of the lead
         */
        lead: number;
        /**
         * The ID of the photo
         */
        photo: number;
    };
};

export type DeleteLeadPhotoResponse = (void);

export type DeleteLeadPhotoError = unknown;

export type GetLeadStatusesResponse = (Array<LeadStatusModel>);

export type GetLeadStatusesError = unknown;

export type CreateLeadStatusData = {
    /**
     * Status data
     */
    body: LeadStatusModel;
};

export type CreateLeadStatusResponse = (LeadStatusModel);

export type CreateLeadStatusError = unknown;

export type UpdateLeadStatusData = {
    /**
     * Updated status data
     */
    body: {
        color?: 'default' | 'danger' | 'positive' | 'warning';
        label?: string;
    };
    path: {
        /**
         * The ID of the status
         */
        status: number;
    };
};

export type UpdateLeadStatusResponse = (LeadStatusModel);

export type UpdateLeadStatusError = unknown;

export type DeleteLeadStatusData = {
    path: {
        /**
         * The ID of the status
         */
        status: number;
    };
};

export type DeleteLeadStatusResponse = (void);

export type DeleteLeadStatusError = unknown;

export type GetLeadsV2Data = {
    query?: {
        /**
         * Comma-separated list of relationships to include in the response
         */
        include?: string;
        /**
         * Converted Leads are always hidden by default. Pass this parameter with a boolean string to see converted leads.
         */
        showConverted?: 'true' | 'false';
    };
};

export type GetLeadsV2Response = (Array<LeadModel>);

export type GetLeadsV2Error = (unknown);

export type CreateLeadV2Data = {
    /**
     * Payload to create a new lead
     */
    body: LeadModel;
};

export type CreateLeadV2Response = (LeadModel);

export type CreateLeadV2Error = ({
    message?: string;
    errors?: {
        [key: string]: unknown;
    };
} | {
    message?: string;
});

export type GetLeadV2Data = {
    path: {
        /**
         * The ID of the lead to retrieve
         */
        id: string;
    };
};

export type GetLeadV2Response = (LeadModel);

export type GetLeadV2Error = (unknown);

export type UpdateLeadV2Data = {
    body: UpdateLeadRequest;
    path: {
        /**
         * The ID of the lead to update
         */
        id: string;
    };
};

export type UpdateLeadV2Response = (LeadModel);

export type UpdateLeadV2Error = (unknown);

export type DeleteLeadV2Data = {
    path: {
        /**
         * The ID of the lead to delete
         */
        id: string;
    };
};

export type DeleteLeadV2Response = ({
    message?: string;
});

export type DeleteLeadV2Error = ({
    message?: string;
} | unknown);

export type ConvertLeadV2Data = {
    /**
     * Payload to convert a lead into a contact, account and deal
     */
    body: ConvertLeadRequest;
};

export type ConvertLeadV2Response = (LeadModel);

export type ConvertLeadV2Error = ({
    message?: string;
    errors?: {
        [key: string]: unknown;
    };
} | {
    message?: string;
});

export type AuthenticateData = {
    body?: AuthFormRequest;
};

export type AuthenticateResponse = (unknown);

export type AuthenticateError = unknown;

export type WebRtcTokenResponse = (unknown);

export type WebRtcTokenError = unknown;

export type GetUsersV2Data = {
    query?: {
        /**
         * Comma-separated list of relationships to include in the response
         */
        include?: string;
    };
};

export type GetUsersV2Response = (Array<UserModel>);

export type GetUsersV2Error = (unknown);

export type CreateUserV2Data = {
    /**
     * Payload to create a new user
     */
    body: UserModel;
};

export type CreateUserV2Response = (UserModel);

export type CreateUserV2Error = ({
    message?: string;
    errors?: {
        [key: string]: unknown;
    };
} | {
    message?: string;
});

export type GetUserV2Data = {
    path: {
        /**
         * The reference of the user to retrieve
         */
        reference: string;
    };
};

export type GetUserV2Response = (UserModel);

export type GetUserV2Error = (unknown);

export type UpdateUserV2Data = {
    body: UpdateUserRequest;
    path: {
        /**
         * The reference of the user to update
         */
        reference: string;
    };
};

export type UpdateUserV2Response = (UserModel);

export type UpdateUserV2Error = (unknown);

export type DeleteUserV2Data = {
    path: {
        /**
         * The reference of the user to delete
         */
        reference: string;
    };
};

export type DeleteUserV2Response = ({
    message?: string;
});

export type DeleteUserV2Error = ({
    message?: string;
} | unknown);